// <auto-generated />
using System;
using IquraSchool.Data;
using IquraSchool.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IquraSchool.Migrations
{
    [DbContext(typeof(DbiquraSchoolContext))]
    partial class DbiquraSchoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IquraSchool.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("IquraSchool.Models.Grade", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<byte>("Absent")
                        .HasColumnType("tinyint");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("Grade1")
                        .HasColumnType("int")
                        .HasColumnName("Grade");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Grade", (string)null);
                });

            modelBuilder.Entity("IquraSchool.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("HeadTeacherId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "HeadTeacherId" }, "IX_Group")
                        .IsUnique();

                    b.ToTable("Group", (string)null);
                });

            modelBuilder.Entity("IquraSchool.Models.ScheduleInfo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("DayOfTheWeek")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("LessonNumber")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("GroupId");

                    b.ToTable("Schedule_Info", (string)null);
                });

            modelBuilder.Entity("IquraSchool.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("IquraSchool.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Subject", (string)null);
                });

            modelBuilder.Entity("IquraSchool.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teacher", (string)null);
                });

            modelBuilder.Entity("IquraSchool.Models.Course", b =>
                {
                    b.HasOne("IquraSchool.Models.Subject", "Subject")
                        .WithMany("Courses")
                        .HasForeignKey("SubjectId")
                        .IsRequired()
                        .HasConstraintName("FK_Course_Subject");

                    b.HasOne("IquraSchool.Models.Teacher", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("TeacherId")
                        .IsRequired()
                        .HasConstraintName("FK_Course_Teacher");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("IquraSchool.Models.Grade", b =>
                {
                    b.HasOne("IquraSchool.Models.Course", "Course")
                        .WithMany("Grades")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK_Grade_Course");

                    b.HasOne("IquraSchool.Models.Student", "Student")
                        .WithMany("Grades")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK_Grade_Student");

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("IquraSchool.Models.Group", b =>
                {
                    b.HasOne("IquraSchool.Models.Teacher", "HeadTeacher")
                        .WithOne("Group")
                        .HasForeignKey("IquraSchool.Models.Group", "HeadTeacherId")
                        .IsRequired()
                        .HasConstraintName("FK_Group_Teacher");

                    b.Navigation("HeadTeacher");
                });

            modelBuilder.Entity("IquraSchool.Models.ScheduleInfo", b =>
                {
                    b.HasOne("IquraSchool.Models.Course", "Course")
                        .WithMany("ScheduleInfos")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK_Schedule_Info_Course");

                    b.HasOne("IquraSchool.Models.Group", "Group")
                        .WithMany("ScheduleInfos")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK_Schedule_Info_Group");

                    b.Navigation("Course");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("IquraSchool.Models.Student", b =>
                {
                    b.HasOne("IquraSchool.Models.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK_Student_Group");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("IquraSchool.Models.Course", b =>
                {
                    b.Navigation("Grades");

                    b.Navigation("ScheduleInfos");
                });

            modelBuilder.Entity("IquraSchool.Models.Group", b =>
                {
                    b.Navigation("ScheduleInfos");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("IquraSchool.Models.Student", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("IquraSchool.Models.Subject", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("IquraSchool.Models.Teacher", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Group");
                });
#pragma warning restore 612, 618
        }
    }
}
